####################################################
# Detection of Jinja files based of file extension #
####################################################

Given (A simple file extension):
  Hello world

Execute:
  silent file foo.jinja
  filetype detect

Then:
  AssertEqual 'jinja', &filetype


Given (File extension j2):
  Hello world

Execute:
  silent file foo.j2
  filetype detect

Then:
  AssertEqual 'jinja', &filetype


Given (File extension jinja2):
  Hello world

Execute:
  silent file foo.jinja2
  filetype detect

Then:
  AssertEqual 'jinja', &filetype


Given (Two file extensions):
  Hello world

Execute:
  silent file foo.html.jinja
  filetype detect

Then:
  AssertEqual 'html.jinja', &filetype


Given (Three file extensions):
  Hello world

Execute:
  silent file foo.tex.html.jinja
  filetype detect

Then:
  AssertEqual 'html.jinja', &filetype


Given (Nonsense file extensions):
  Hello world

# I really hope there is no 'nonsense' file format out there
Execute:
  silent file foo.nonsense.jinja
  filetype detect

Then:
  AssertEqual 'jinja', &filetype


Given (Do not double-detect jinja):
  {# This is a Jinja comment #}

Execute:
  silent file foo.html.jinja
  filetype detect

Then:
  AssertEqual 'html.jinja', &filetype


Given (Do not append Jinja multiple times):
  Hello world

# This will fail because the filetype remains 'html.jinja'.
Execute:
  silent file foo.html.jinja
  filetype detect
  silent file foo.nonsense.jinja
  filetype detect

Then:
  AssertEqual 'jinja', &filetype


Given (Add new file type where necessary):
  Hello world

Execute:
  silent file foo.nonsense.jinja
  filetype detect
  silent file foo.html.jinja
  filetype detect

Then:
  AssertEqual 'html.jinja', &filetype


Given (change file type when necessary):
  Hello world

Execute:
  silent file foo.html.jinja
  filetype detect
  silent file foo.xml.jinja
  filetype detect

Then:
  AssertEqual 'xml.jinja', &filetype
